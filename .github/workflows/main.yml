name: iOS Build and Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-archive:
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Dependencies (if any)
        run: |
          # Add commands to install any required tools or dependencies here

      - name: Build Dependencies
        run: |
          if [ -d "basebin/jailbreakd" ]; then
            cd basebin/jailbreakd && make && cd -
          fi
          if [ -d "basebin/jbctl" ]; then
            cd basebin/jbctl && make && cd -
          fi
          if [ -d "basebin/jbinit" ]; then
            cd basebin/jbinit && make && cd -
          fi
          if [ -d "basebin/launchdhook" ]; then
            cd basebin/launchdhook && make && cd -
          fi
          if [ -d "basebin/systemhook" ]; then
            cd basebin/systemhook && make && cd -
          fi

      - name: Build and Archive Xcode Project
        run: |
          xcodebuild archive -project escape.xcodeproj \
                             -scheme escape \
                             -configuration Release \
                             -sdk iphoneos \
                             -archivePath $PWD/build/escape.xcarchive \
                             CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO

      - name: Export Archive to IPA
        run: |
          xcodebuild -exportArchive \
                     -archivePath $PWD/build/escape.xcarchive \
                     -exportOptionsPlist exportOptions.plist \
                     -exportPath $PWD/build

  release:
    needs: build-and-archive
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload IPA to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/escape.ipa
          asset_name: escape.ipa
          asset_content_type: application/octet-stream
